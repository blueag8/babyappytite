{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import pymongo\nimport os\n\n\nfrom bson.objectid import ObjectId\nfrom flask import Flask, render_template, redirect, request, url_for, flash\nfrom flask_pymongo import PyMongo\n\n#connect to database\napp = Flask(__name__)\n\napp.config['MONGO_DBNAME'] =\"Baby_Recipes\"\napp.config[\"MONGO_URI\"] =\"mongodb+srv://blueag8:mongo8@cluster0-iodau.mongodb.net/Baby_Recipes?retryWrites=true&w=majority\"\napp.config['SECRET_KEY'] = 'yum'    \n\nmongo = PyMongo(app)\n\n\n#home page\n\n\n\n@app.route('/')\ndef home():\n    return render_template(\"index.html\", recipes=mongo.db.recipes.find())\n    \n#get \n#single recipe\n\n@app.route('/recipe/<recipe_id>')\ndef recipe(recipe_id):\n    recipes=mongo.db.recipes.find({\"_id\": ObjectId(recipe_id)})\n    return render_template(\"recipe.html\", recipes=recipes )\n\n#TEST1\n    \n#recipes categorized per page route\n\n#@app.route('/recipes')\n#def recipes():\n   # recipes=mongo.db.recipes.find()\n    #TEST\n    #for recipe in recipes:\n      #  print(recipe)\n        \n   # return render_template(\"recipes.html\")\n    \n@app.route('/sixmonth_recipes')\ndef sixmonth_recipes():\n   return render_template(\"recipes.html\", recipes=mongo.db.recipes.find({\"category_age\":\"6 months +\"}))\n\n@app.route('/sevenmonth_recipes')\ndef sevenmonth_recipes():\n    return render_template(\"recipes.html\", recipes=mongo.db.recipes.find({\"category_age\":\"7 months +\"}))\n\n@app.route('/tenmonth_recipes')\ndef tenmonth_recipes():\n    return render_template(\"recipes.html\", recipes=mongo.db.recipes.find({\"category_age\":\"10 months +\"}))\n    \n@app.route('/twelvemonth_recipes')\ndef twelvemonth_recipes():\n    return render_template(\"recipes.html\",recipes=mongo.db.recipes.find({\"category_age\":\"12 months +\"}))\n\n#add recipe \n\n@app.route('/addrecipe')\ndef addrecipe():\n    #return render_template(\"testform.html\",recipes=mongo.db.recipes.find(),\n          # categories=mongo.db.categories.find())\n    return render_template(\"addrecipe.html\", recipes=mongo.db.recipes.find(),\n           categories=mongo.db.categories.find())\n\n #took idea for flash from https://github.com/Deirdre18/dumpdinners-recipe-app/blob/master/app.py\n \n#@app.route('/insert_recipe', methods=['POST'])\n#def insert_recipe():\n   # recipes=mongo.db.recipes\n   # recipes.insert(request.form.to.dict(flat=False))\n   # flash (\"Thank you, your recipe has been added!\")\n\n    #return render_template(\"addrecipe.html\", recipe=recipe)\n    #Test1 Failed \n    \n    #Testing2 \n@app.route('/insert_recipe', methods=['GET','POST'])\ndef insert_recipe():\n    recipes=mongo.db.recipes\n    category_age=mongo.db.recipes.category_age\n   # filepath = '../static/img/' + filename\n    \n\n    recipe_name=request.form[\"recipe_name\"]\n    category_age=request.form.get[\"category_age\"]\n    cooking_time=int(request.form[\"cooking_time\"])\n    portion_sizes=int(request.form[\"portion_size\"]) \n    allergens=request.form.getlist(\"allergen\")\n    ingredients=request.form.getlist(\"ingredient\")\n    recipe_description=request.form[\"recipe_description\"]\n    steps=request.form.getlist(\"step\")\n    #filename = image.save(request.files['image'])\n      \n    form={\n    \n        \"recipe_name\":recipe_name,\n        \"category_age\":category_age,\n        \"cooking_time\":cooking_time,\n        \"portion_size\":portion_sizes,\n        \"allergen\": allergens,\n        \"ingredient\": ingredients,\n        \"recipe_description\":recipe_description,\n        \"step\": steps,\n       # \"image\": filepath,\n          }\n          \n     \n      \n    recipes.insert_one(form)\n    flash (\"Thank you, your recipe has been added!\")\n    return redirect(url_for('home', recipe=recipe, category_age=category_age))\n#edit recipe\n#@app.route('/editrecipe/<recipe_id>', methods=['GET','POST'])\n#def editrecipe(recipe_id):\n   \n    #return render_template(\"testform.html\",recipes=mongo.db.recipes.find(),\n          # categories=mongo.db.categories.find())\n    #return render_template(\"editrecipe.html\",recipes=mongo.db.recipes.find({\"_id\": ObjectId(recipe_id)}),\n          # categories=mongo.db.categories.find())\n\n#TESTING \n@app.route('/editrecipe/<recipe_id>')\ndef editrecipe(recipe_id):\n    the_recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})\n    all_categories=mongo.db.category_age.find()\n    allergen=mongo.db.allergens.find()\n    return render_template('editrecipe.html', recipe=the_recipe, allergen=allergen, category_age=all_categories)\n    \n@app.route('/update_recipe/<recipe_id>', methods=['POST'])\ndef update_recipe(recipe_id):\n    recipes=mongo.db.recipes\n    recipes.update( {'_id': ObjectId(recipe_id)},\n\n\n   # filepath = '../static/img/' + filename\n\n\n    {\n            'recipe_name':request.form.get(\"recipe_name\"),\n            'category_age':request.form.get(\"category_age\"),\n            'cooking_time':int(request.form[\"cooking_time\"]),\n            'portion_sizes':int(request.form[\"portion_size\"]),\n            'allergens':request.form.getlist(\"allergen\"),\n            'ingredients':request.form.getlist(\"ingredient\"),\n            'recipe_description':request.form.get(\"recipe_description\"),\n            'steps':request.form.getlist(\"step\"),\n       \n\n \n   # filename = image.save(request.files['image'])\n\n      })\n          \n    #flash (\"Thank you, your recipe has been added!\")\n    return redirect(url_for('home'))\n    \n   # filepath = '../static/img/' + filename\n\n    #filename = image.save(request.files['image']\n\n\n    \n@app.route('/delete_recipe/<recipe_id>')    \ndef delete_recipe(recipe_id):\n    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})\n    return redirect(url_for('home'))\n\n \n\n    \n    \nif __name__ == '__main__':\n    app.run(host=os.environ.get('IP'),\n            port=int(os.environ.get('PORT')),\n            debug=True)\n\n","undoManager":{"mark":-2,"position":16,"stack":[[{"start":{"row":140,"column":0},"end":{"row":144,"column":0},"action":"insert","lines":["<<<<<<< HEAD","=======","   # filepath = '../static/img/' + filename",">>>>>>> 2e080b1a2b8e13de6aa2297e49487688dc3e0e48",""],"id":199},{"start":{"row":155,"column":0},"end":{"row":156,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":157,"column":0},"end":{"row":160,"column":0},"action":"insert","lines":["=======","   # filename = image.save(request.files['image'])",">>>>>>> 2e080b1a2b8e13de6aa2297e49487688dc3e0e48",""]},{"start":{"row":169,"column":0},"end":{"row":170,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":174,"column":36},"end":{"row":189,"column":48},"action":"insert","lines":["","======="," ","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))   ",">>>>>>> 2e080b1a2b8e13de6aa2297e49487688dc3e0e48"]}],[{"start":{"row":159,"column":5},"end":{"row":159,"column":48},"action":"remove","lines":[">> 2e080b1a2b8e13de6aa2297e49487688dc3e0e48"],"id":200}],[{"start":{"row":155,"column":0},"end":{"row":155,"column":12},"action":"remove","lines":["<<<<<<< HEAD"],"id":201}],[{"start":{"row":140,"column":0},"end":{"row":140,"column":12},"action":"remove","lines":["<<<<<<< HEAD"],"id":202}],[{"start":{"row":143,"column":1},"end":{"row":143,"column":48},"action":"remove","lines":[">>>>>> 2e080b1a2b8e13de6aa2297e49487688dc3e0e48"],"id":203}],[{"start":{"row":141,"column":0},"end":{"row":141,"column":7},"action":"remove","lines":["======="],"id":204}],[{"start":{"row":156,"column":1},"end":{"row":157,"column":7},"action":"remove","lines":["   #filename = image.save(request.files['image'])","======="],"id":205}],[{"start":{"row":157,"column":3},"end":{"row":157,"column":4},"action":"remove","lines":["#"],"id":206}],[{"start":{"row":157,"column":3},"end":{"row":157,"column":4},"action":"insert","lines":["#"],"id":207}],[{"start":{"row":158,"column":0},"end":{"row":158,"column":5},"action":"remove","lines":[">>>>>"],"id":208}],[{"start":{"row":167,"column":0},"end":{"row":167,"column":4},"action":"remove","lines":["    "],"id":209}],[{"start":{"row":174,"column":0},"end":{"row":174,"column":7},"action":"remove","lines":["======="],"id":210}],[{"start":{"row":168,"column":0},"end":{"row":168,"column":12},"action":"remove","lines":["<<<<<<< HEAD"],"id":211}],[{"start":{"row":188,"column":0},"end":{"row":188,"column":48},"action":"remove","lines":[">>>>>>> 2e080b1a2b8e13de6aa2297e49487688dc3e0e48"],"id":212}],[{"start":{"row":143,"column":0},"end":{"row":143,"column":1},"action":"remove","lines":[">"],"id":213}],[{"start":{"row":176,"column":0},"end":{"row":188,"column":0},"action":"remove","lines":["@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))   ",""],"id":214}],[{"start":{"row":118,"column":35},"end":{"row":118,"column":36},"action":"insert","lines":[" "],"id":215}]]},"ace":{"folds":[],"scrolltop":1560,"scrollleft":0,"selection":{"start":{"row":114,"column":5},"end":{"row":114,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":107,"state":"start","mode":"ace/mode/python"}},"timestamp":1566742328634}